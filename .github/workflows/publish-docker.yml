name: CI/CD into Yandex.Cloud

on:
  push:
    branches: [ env-11-ci-cd ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checking out the repository
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push Docker images
        uses: docker/build-push-action@v2.4.0
        with:
          context: .
          tags: #yanrun/app:latest
          push: true


  deploy:
    - name: Deploy to Yandex.Cloud via SSH action
      uses: appleboy/ssh-action@v0.1.3
      with:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        KEY: ${{ secrets.SSHKEY }}
        envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,COMMAND
        script: |
          # Stop running container
          docker stop $(echo $IMAGE_NAME)

          # Remove old container
          docker rm $(echo $IMAGE_NAME)

          # Run a new container from a new image
          docker run -d \
          --restart always \
          --env-file .env \
          -p 8000:8000 \
          --name $(echo $IMAGE_NAME) \
          $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) $(echo $COMMAND)

    - name: Deploy to Yandex.Cloud via SSH action
      uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: ""
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: "/dist/, /node_modules/"
